steps:
- id: 'tf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "GCP_Terraform" ]; then
        terraform init
      else
        for dir in GCP_Terraform
        do 
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "*************************************************"
          terraform init || exit 1
        done
      fi 
# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "GCP_Terraform" ]; then
        terraform plan -lock=false
      else
        for dir in GCP_Terraform/
        do 
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "*************************************************"
          terraform plan -lock=false || exit 1
        done
      fi 
# [END tf-plan]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "GCP_Terraform" ]; then    
        terraform apply -lock=false -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "*******************************************************************************"
      fi
# [END tf-apply]
timeout: 1800s
options:
  logging: CLOUD_LOGGING_ONLY

# [START execute-sql]
- id: 'Execute SQL file'
  name: 'postgres:14'
  env:
    - DB_USERNAME = [rahul]
    - DB_PASSWORD = [rahul]
    - DB_NAME = [pstgsq]
    - SQL_FILE_PATH = [GCP_Terraform/table.sql]
  entrypoint: 'sh'
  args:
  - '-c'
  - |
     psql -U $DB_USERNAME -W -d $DB_NAME -f $SQL_FILE_PATH
# [END execute-sql]
